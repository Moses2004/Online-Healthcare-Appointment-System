@model List<Online_Healthcare_Appointment_System.Models.ReportViewModel>

@{
    ViewData["Title"] = "Reports Dashboard";
}

<div id="reportContent" class="container mt-4 bg-white p-4 rounded shadow-sm">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left-circle"></i> Back to Dashboard
         </a>
        <h2 class="text-center flex-grow-1 mb-0">Reports Dashboard</h2>
        <button id="downloadReportBtn" class="btn btn-success">
            <i class="bi bi-download"></i> Download Report
        </button>
    </div>

    <div class="row g-4">

        <!-- Doctor Report -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3">
                <h5 class="text-center mb-3">Appointments per Doctor</h5>
                <canvas id="doctorChart" style="max-height: 300px;"></canvas>
            </div>
        </div>

        <!-- Monthly Payments Report -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3">
                <h5 class="text-center mb-3">Total Payments by Month</h5>
                <canvas id="paymentChart" style="max-height: 300px;"></canvas>
            </div>
        </div>

        <!-- Patient Gender Distribution -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3">
                <h5 class="text-center mb-3">Patient Gender Distribution</h5>
                <canvas id="genderChart" style="max-height: 300px;"></canvas>
            </div>
        </div>

        <!-- Patient Age Group Distribution -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3">
                <h5 class="text-center mb-3">Patient Age Group Distribution</h5>
                <canvas id="ageChart" style="max-height: 300px;"></canvas>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

    <script>
        // Chart 1: Doctor Appointments
        var ctx1 = document.getElementById('doctorChart').getContext('2d');
        var doctorChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(r => r.DoctorName))),
                datasets: [{
                    label: 'Appointments',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(r => r.AppointmentCount))),
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                },
                scales: { y: { beginAtZero: true } }
            }
        });

        // Chart 2: Payments by Month
        var ctx2 = document.getElementById('paymentChart').getContext('2d');
        var paymentChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PaymentMonths)),
                datasets: [{
                    label: 'Total Payments (MMK)',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PaymentTotals)),
                    backgroundColor: 'rgba(75, 192, 192, 0.3)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.3
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true } }
            }
        });

        // Chart 3: Gender Distribution
        var genderCtx = document.getElementById('genderChart').getContext('2d');
        var genderChart = new Chart(genderCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.GenderLabels)),
                datasets: [{
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.GenderCounts)),
                    backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#AA65CC'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'bottom' },
                }
            }
        });

        // Chart 4: Age Group Distribution
        var ageCtx = document.getElementById('ageChart').getContext('2d');
        var ageChart = new Chart(ageCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AgeLabels)),
                datasets: [{
                    label: 'Number of Patients',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.AgeCounts)),
                    backgroundColor: 'rgba(153, 102, 255, 0.6)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true } }
            }
        });

        // PDF Download Logic
        document.getElementById('downloadReportBtn').addEventListener('click', async () => {
            const { jsPDF } = window.jspdf;
            const element = document.getElementById('reportContent');

            // wait for charts to finish rendering
            await new Promise(resolve => setTimeout(resolve, 500));

            html2canvas(element, {
                scale: 2,
                useCORS: true,
                backgroundColor: '#ffffff', // ensures solid white bg
                windowWidth: document.documentElement.scrollWidth,
                windowHeight: document.documentElement.scrollHeight
            }).then(canvas => {
                const imgData = canvas.toDataURL('image/png');
                const pdf = new jsPDF('p', 'mm', 'a4');
                const imgWidth = 190;
                const pageHeight = 297;
                const imgHeight = canvas.height * imgWidth / canvas.width;
                let heightLeft = imgHeight;
                let position = 10;

                pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
                heightLeft -= pageHeight;

                while (heightLeft > 0) {
                    position = heightLeft - imgHeight;
                    pdf.addPage();
                    pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
                }

                const today = new Date();
                const filename = `Healthcare_Report_${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}.pdf`;
                pdf.save(filename);
            });
        });
    </script>
}
